# Actuator properties
management.endpoints.web.exposure.include=health, info, mappings, beans

#Custom properties
#Exception Messages
user-already-exists-exception.message=User already exists.

#Other Custom properties
host.url=http://localhost:8080
sign-up.endpoint=/register
profile.endpoint=/profile/
resources.path=/resources/**
static.path=/static/**
css.path=/css/**
js.path=/js/**
images.path=/images/**
authority-key=auth
superadmin.role-id=1
superadmin.role-name=SUPERADMIN
admin.role-id=2
admin.role-name=ADMIN
trainer.role-id=3
trainer.role-name=TRAINER
mentor.role-id=4
mentor.role-name=MENTOR
student.role-id=5
student.role-name=STUDENT
role-name.suffix=ROLE_
at-character=@

#HTTP Response Messages
invalid-password.message=Invalid password. Must be between 8-16 characters, should have an uppercase letter, a lowercase letter, a digit and a special character.
invalid-email.message=Email does not have proper format.
invalid-name.message=Name should be between 2-15 characters and should not have any digit or special character.
register-success.message=Registered Successfully
user-already-exists.message=User already exists with the provided username.
invalid-credentials.message=Invalid Credentials.

#API Response Json titles
title.status=status
title.message=message
title.resource-location=resource-location

#Dummy Data For Junit Tests
user.student.email-valid=john_doe@epam.com
user.student.email-invalid1=john_doe@gmail.com
user.student.email-invalid2=johndoe@gmail.com

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://10.71.8.186:3306/rd_management?useSSL=false

spring.datasource.username = root
spring.datasource.password = 123456

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
#update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Initialize the database using data.sql script
spring.datasource.initialization-mode=always

access-denied.message = Access denied

could-not-add-trainer.message = Could not add trainer

could-not-add-mentor.message = Could not add mentor

could-not-add-admin.message = Could not add admin

mentor-added.message = Mentor added successfully

trainer-added.message = Trainer added successfully

admin-added-successfully.message = Admin added successfully

admin-added.message = Admin added successfully

feedback-added.message = Feedback added successfully

operation-could-not-be-processed = Operation could not be processed

mentor-not-available-exception.message = Mentor not available

student-not-found-exception.message = Student not available

mentees-not-found.message = Mentees not found

admin-not-foound.message = Admin Not Found

epam-email-extension = @epam.com


#Exception messages
invalid-email-exception-message=student with the given email is not found
no-trainer-assigned-exception-message=student with the given email does not have a trainer
mentor-not-available-exception-message=Mentor Information for this Student is not available
mentee-not-found-exception-message=mentee with the given email not found
feedback-not-found-exception.message=Unable to retrieve feedback
